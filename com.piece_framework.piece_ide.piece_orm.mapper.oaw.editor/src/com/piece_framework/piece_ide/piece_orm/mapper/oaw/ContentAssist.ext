import piece_orm_mapper;
import codeassist;

extension com::piece_framework::piece_ide::piece_orm::mapper::oaw::Extensions;
extension com::piece_framework::piece_ide::piece_orm::mapper::oaw::GenContentAssist reexport;

/*
 * There are two types of extensions one can define
 *
 * completeMetaType_feature(ModelElement ele, String prefix)
 * This one is called for assignments only. It gets the underlying Modelelement and the current prefix passed in.
 *
 * Note that only proposals with 'Proposal.toInsert.toLowerCase().startsWith(prefix.toLowerCase())' will be proposed in the editor
 * 
 * you can sort and/or filter the proposals by overwriting 'List[Proposal] sortProposals(List[Proposal] proposalsToSort)'
 */

List[Proposal] completeMethod_name(emf::EObject ctx, String prefix) :
    getProposalListForMethodName();

List[Proposal] getProposalListForMethodName() :
    JAVA com.piece_framework.piece_ide.piece_orm.mapper.editor.contentassist.MethodNameContentAssist.getProposalList();

List[Proposal] completeAssociationReference_name(emf::EObject ctx, String prefix) :
    getProposalListForAssociationName();

List[Proposal] getProposalListForAssociationName() :
    JAVA com.piece_framework.piece_ide.piece_orm.mapper.editor.contentassist.AssociationNameContentAssist.getProposalList();

List[Proposal] sortProposals(List[Proposal] proposalsToSort):
    null;
